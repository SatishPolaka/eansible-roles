- name: disable curret nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable nodejs 20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs
  ansible.builtin.package:
    name: "{{ item}}"
    state: installed
  loop:
  - nodejs
  - mysql

- name: create a user expense
  ansible.builtin.user:
    name: expense

- name: create a app directory
  ansible.builtin.file:
    path: /app
    state: directory

- name: Download the application code to created app directory
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip

- name: unzip the application code
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes

- name: install the nodejs dependencies
  community.general.npm:
    path: /app

- name: copy backend service file from anisble server to remote backend server
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: install backend library
  ansible.builtin.pip:
    name: "{{ packages }}"
    executable: pip3.9
  vars:
    packages:
    - PyMySQL
    - cryptography

- name: import the sql schema
  community.mysql.mysql_db:
    state: import
    name: all
    login_user: "{{mysql_user}}"
    login_password: "{{mysql_password}}"
    login_host: mysql.psrexpense.store
    target: /app/schema/backend.sql


- name: deamon reload
  ansible.builtin.systemd_service:
    enabled: true
    state: restarted
    daemon_reload: true
    name: backend
